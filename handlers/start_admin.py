# - *- coding: utf- 8 - *-
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message, ChatPhoto
from aiogram.utils.exceptions import MessageCantBeDeleted
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.markdown import hlink

from modules.utils import main_config, ded
from modules.utils.check_func import CheckAdmin
from modules.keyboards import inline_user

from contextlib import suppress
from datetime import datetime, date

from bot_telegram import dp, bot
import os


@dp.message_handler(CheckAdmin(), commands = ['admin'], state = "*")
async def start(message: Message, state: FSMContext):
    await state.finish()

    files = os.listdir("./data/txt_dialogs/")

    await message.answer(f"<b>–í—Å–µ–≥–æ –æ–ø—Ä–æ—Å –ø—Ä–æ—à–ª–æ <code>{len(files)}</code> —á.</b>")
    message_text = ''
    for i, name_files in enumerate(files, 1):
        user_id = name_files.replace(".txt", "")

        with open(f"./data/txt_dialogs/{name_files}", 'r', encoding="utf-8") as file:
            data = file.read()
            if "<‚úÖ>" == data[-3:]:
                data = data.split(" ")
                user_username = f"{[row for row in data if row.startswith('@')][0]} - <code>{user_id}</code> ‚úÖ"
            elif "<‚ùå>" == data[-3:]:
                data = data.split(" ")
                user_username = f"{[row for row in data if row.startswith('@')][0]} - <code>{user_id}</code> ‚ùå"
            else:
                data = data.split(" ")
                user_username = f"{[row for row in data if row.startswith('@')][0]} - <code>{user_id}</code> üü†"

        message_text += f"{i}. {user_username}\n"

    await message.answer(f"<i>–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–∞–ª–µ–º, –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ ID.</i>\n\n{message_text}")
    await state.set_state("waiting_id")



@dp.message_handler(CheckAdmin(), state = "waiting_id")
async def get_dialogs(message: Message, state: FSMContext):
    await state.finish()
    try:
        user_id = int(message.text)
    except ValueError:
        await message.answer("<b>ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º</b>")

    files = os.listdir("./data/txt_dialogs/")
    if f"{message.text}.txt" in files:
        with open(f"./data/txt_dialogs/{message.text}.txt", 'r', encoding="utf-8") as file:
            data = file.read()
            data = data.replace("<‚úÖ>", "")
            data = data.replace("<‚ùå>", "")
            await message.answer(data+"\n\n<b>–û–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω?</b>", reply_markup=inline_user.sussecfully_opros(user_id), disable_web_page_preview=True)

    else:
        await message.answer("<b> ID –Ω–µ –Ω–∞–π–¥–µ–Ω </b>")


@dp.callback_query_handler(text_startswith="opros:", state="*")
async def selected_payment(call: CallbackQuery, state: FSMContext):
    select = call.data.split(":")[1]
    id_txt = call.data.split(":")[2]

    with open(f"./data/txt_dialogs/{id_txt}.txt", 'r', encoding="utf-8") as file:
        data = file.read()
        new_text = data + f"<{select}>"
        file.close()
    if select == "‚úÖ":
        await bot.send_message(id_txt, ded("""
        <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! ‚úÖ</b>

        <i>–í—Å—Ç—É–ø–∞–π—Ç–µ –≤ —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ ILLUMINATES Project:
        https://t.me/+yfWbnLuL0r1jM2U0
        
        –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –º–∞–Ω—É–∞–ª–æ–º –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞!
        
        –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –≤ —á–∞—Ç–µ, –∞ —Ç–∞–∫ –∂–µ –≤ –ª–∏—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ @illuminates_ts
         
        –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–º–µ–Ω –∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —á–∞—Ç–∞, –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –¥–æ—Å—Ç—É–ø.
        
        –ñ–µ–ª–∞–µ–º —É—Å–ø–µ—Ö–æ–≤!</i>
        
        """))
    else:
        await bot.send_message(id_txt, ded("""
        –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞! ‚ùå

        –£–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –≤—ã –º–æ–∂–µ—Ç–µ —É @illuminates_ts
        
        –ñ–µ–ª–∞–µ–º —É—Å–ø–µ—Ö–æ–≤
        
        """))

    user_file = open(f"./data/txt_dialogs/{id_txt}.txt", "w", encoding="utf-8")
    user_file.write(new_text)
    user_file.close()

    await call.answer("–£—Å–ø–µ—à–Ω–æ üëç")

